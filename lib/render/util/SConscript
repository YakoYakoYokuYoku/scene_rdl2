Import('env')
from os import path

# extract library name from current/parent path
modName = path.basename(path.abspath('..'))
libName = path.basename(path.abspath('.'))
# --------------------------------------------------------------------------
name       = modName+'_'+libName
sources    = env.DWAGlob('*.cc')
sources    += env.DWAGlob('*.cpp')
incdir     = [env.Dir('#include'), env.Dir('$INSTALL_DIR/include/scene_rdl2')]

private_components = ['common_except']
components = [
    'common_math',
    'common_platform',
    'jsoncpp',
    'render_logging',
    'lua',
    'render_logging',
    'tbb'
]

if 'icc' in env['CC']:
    pass # For now.
elif 'gcc' in env['CC']:
    pass # For now.
elif 'clang' in env['CC']:
    pass # For now.

# --------------------------------------------------------------------------

publicHeaders = [
    'AlignedAllocator.h',
    'Alloc.h',
    'Arena.h',
    'Arena.isph',
    'Args.h',
    'Array2D.h',
    'AtomicFloat.h',
    'BitUtils.h',
    'BitUtils.isph',
    'BlockAllocatorCheck.h',
    'Files.h',
    'GetEnv.h',
    'GUID.h',
    'IndexableArray.h',
    'integer_sequence.h',
    'LuaScriptRunner.h',
    'Memory.h',
    'MemPool.h',
    'MiscUtils.h',
    'Random.h',
    'Random.isph',
    'ReaderWriterMutex.h',
    'RealUtil.h',
    'Ref.h',
    'shared_mutex.h',
    'SList.h',
    'SManip.h',
    'SortUtil.h',
    'stdmemory.h',
    'Strings.h',
    'StrUtil.h',
    'syncstream.h',
    'TimeUtil.h',
    'type_traits.h',
    'TypedStaticallySizedMemoryPool.h'
]

env.DWAInstallInclude(publicHeaders, 'scene_rdl2/render/util')

env.DWAForceWarningAsError()
env.DWAUseComponents(components+private_components)
lib = env.DWASharedLibrary(name, sources)
target = env.DWAInstallLib(lib)

env.DWAComponent(
    name,
    LIBS=target,
    CPPPATH=incdir,
    COMPONENTS=components,
    ISPCFLAGS=['-I' + str(x) for x in incdir])
env.DWAInstallSConscriptStub(
    name,
    LIBS=target,
    CPPPATH=[env.Dir('$INSTALL_DIR/include')],
    COMPONENTS=components)
env.Append(CPPPATH=incdir)
env.DWALinkValidate(name)
