Import('env')
from os import path

modName = path.basename(path.abspath('..'))
libName = path.basename(path.abspath('.'))
# --------------------------------------------------------------------------
name       = modName+'_'+libName
sources    = env.DWAGlob('*.cc')
incdir     = [env.Dir('#include')]
components = [
           'common_fb_util',
           'common_math',
           'common_platform',
           'common_rec_time',
           'render_logging',
           'jsoncpp',
           'scene_rdl2',
           'tbb'
           ]
private_components = [
    'render_logging',
    ]

# --------------------------------------------------------------------------
publicHeaders = [
              'ActivePixelsArray.h',
              'Arg.h',
              'DebugConsoleDriver.h',
              'Fb.h',
              'FbActivePixels.h',
              'FbActivePixelsAov.h',
              'FbAov.h',
              'FbReferenceType.h',
              'FloatValueTracker.h',
              'LatencyLog.h',
              'LiteralUtil.h',
              'PackActiveTiles.h',
              'PackTiles.h',
              'PackTilesPassPrecision.h',
              'PackTilesTest.h',
              'Parser.h',
              'RenderPrepStats.h',
              'RunLenBitTable.h',
              'Sha1Util.h',
              'SockUtil.h',
              'TlSvr.h'
              ]
env.DWAInstallInclude(publicHeaders, 'scene_rdl2/common/grid_util')
env.DWAUseComponents(components+private_components)
env.Prepend (CPPPATH=incdir,LIBS=["ssl"])
lib = env.DWASharedLibrary(name, sources)
target = env.DWAInstallLib(lib)
env.DWAComponent(name, LIBS=target+["ssl"], CPPPATH=incdir, COMPONENTS=components)
env.DWAInstallSConscriptStub(name, LIBS=target+["ssl"],
                             CPPPATH=[env.Dir('$INSTALL_DIR/include')],
                             COMPONENTS=components)
env.DWALinkValidate(name)
