Import('env')
from os import path

# extract library name from current/parent path
modname = path.basename(path.abspath('..'))
libname = path.basename(path.abspath('.'))
# --------------------------------------------------------------------------
name       = modname+'_'+libname
sources    = env.DWAGlob('*.cc')
incdir     = [env.Dir('#include')]
components = ['render_logging']
                 
# --------------------------------------------------------------------------
publicHeaders = [
    'DebugLog.h',
    'HybridUniformData.hh',
    'HybridUniformData.h',
    'HybridVaryingData.hh',
    'HybridVaryingData.h',
    'Intrinsics.h',
    'IspcUtil.h',
    'IspcUtil.isph',
    'Platform.h',
    'Platform.hh',
    'Platform.isph',
]

if 'icc' in env['CC']:
    pass # For now.
elif 'gcc' in env['CC']:
    pass # For now.
elif 'clang' in env['CC']:
    pass # For now.

env.DWAInstallInclude(publicHeaders, 'scene_rdl2/common/platform')

env.DWAForceWarningAsError()
env.DWAUseComponents(components)
lib = env.DWASharedLibrary(name, sources)
target = env.DWAInstallLib(lib)

env.DWAComponent(
    name,
    LIBS=target,
    ISPCFLAGS=['-I' + str(x) for x in incdir],
    CPPPATH=incdir,
    COMPONENTS=components)
env.DWAInstallSConscriptStub(
    name,
    LIBS=target,
    CPPPATH=[env.Dir('$INSTALL_DIR/include')],
    COMPONENTS=components)


env.Append(CPPPATH=incdir)
env.DWALinkValidate(name)
